group "${group}.junit.api"
description = "JUnit API Tests"

dependencies {
    implementation project(":core")
    implementation libs.bundles.junit
    implementation libs.bundles.restassured
}

test {
    useJUnitPlatform()

    reports {
        html.required = false
        junitXml.required = false
    }

    /*
    * For parallel strategy:
    *
    * 1. Fixed strategy:
    * "junit.jupiter.execution.parallel.config.strategy"          : "fixed",
    * "junit.jupiter.execution.parallel.config.fixed.parallelism" : "8"
    *
    * 2. Dynamic strategy:
    * "junit.jupiter.execution.parallel.config.dynamic.factor"   : "1"
    * (count of threads = count of available processors*1)
    *
    * 3. Custom strategy:
    * "junit.jupiter.execution.parallel.config.custom.class" : for example, org.example.CustomStrategy
    */
    systemProperties = [
            "junit.jupiter.testmethod.order.default"                : 'org.junit.jupiter.api.MethodOrderer$OrderAnnotation',
            "junit.jupiter.testinstance.lifecycle.default"          : "per_class",
            "junit.jupiter.execution.parallel.enabled"              : "true",
            "junit.jupiter.execution.parallel.mode.classes.default" : "concurrent",
            "junit.jupiter.execution.parallel.config.dynamic.factor": "1"
    ]
}